package com.beepeers.common.ro;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.xml.bind.annotation.XmlRootElement;

@XmlRootElement
public class FunctionRO implements Comparable<FunctionRO> {

	public enum FunctionTypeRO {
		DEFAULT, MAP, PROFILE, WEB, REST
	}

	public enum ConfigurationType {
	}

	public enum VisibilityMode {
	}

	private String name;

	private Integer orderNum;

	private FunctionTypeRO type;

	private String pictureUrl;

	private String thumbnailUrl;
	
	private List<FunctionRO> functionChildrenList;

	private List<ParameterRO> parameterList;

	public FunctionRO() {
		this.functionChildrenList = new ArrayList<FunctionRO>();
		this.parameterList = new ArrayList<ParameterRO>();
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public FunctionTypeRO getType() {
		return this.type;
	}

	public void setType(FunctionTypeRO type) {
		this.type = type;
	}

	public Integer getOrderNum() {
		if (this.orderNum != null) {
			return this.orderNum;
		} else {
			return 0;
		}
	}

	public void setOrderNum(Integer orderNum) {
		this.orderNum = orderNum;
	}

	public List<ParameterRO> getParameterList() {
		return this.parameterList;
	}

	public void setParameterList(List<ParameterRO> parameterList) {
		this.parameterList = parameterList;
	}

	public void setParameterListFromMap(Map<String, ParameterRO> parameterMap) {
		if (parameterMap != null)
			this.parameterList = new ArrayList<ParameterRO>(parameterMap.values());
		;
	}

	public List<FunctionRO> getFunctionChildrenList() {
		return this.functionChildrenList;
	}

	public void setFunctionChildrenList(List<FunctionRO> functionChildrenList) {
		this.functionChildrenList = functionChildrenList;
	}

	public String getPictureUrl() {
		return this.pictureUrl;
	}

	public void setPictureUrl(String pictureUrl) {
		this.pictureUrl = pictureUrl;
	}

	public String getThumbnailUrl() {
		return thumbnailUrl;
	}

	public void setThumbnailUrl(String thumbnailUrl) {
		this.thumbnailUrl = thumbnailUrl;
	}
	
	@Override
	public int compareTo(FunctionRO other) {
		return this.getOrderNum().compareTo(other.getOrderNum());
	}
}
